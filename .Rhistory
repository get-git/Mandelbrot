intall.packages ("raster")
install.packages ("raster")
library(raster)
library(parallel)
## read in mandelbrot matrix
pGrid <- readRDS("./pGrid_mandel.RDS")
## write raster of set
rFrac <- pGrid
rFrac <- rasterFromXYZ(rFrac)
plot(rFrac)
library(raster)
library(parallel)
## read in mandelbrot matrix
pGrid <- readRDS("./pGrid_mandel.RDS")
## write raster of set
rFrac <- pGrid
rFrac <- rasterFromXYZ(rFrac)
library(raster)
library(parallel)
pGrid <- readRDS("./pGrid_mandel.RDS")
git (wd)
get (wd)
(get wd)
(getwd)
get wd ()
getwd()
pGrid <- readRDS("./pGrid_mandel.RDS")
list.files
list.files ()
pGrid <- readRDS("./pGrid_mandel.RDS")
rFrac <- pGrid
rFrac <- rasterFromXYZ(rFrac)
plot(rFrac)
head (pGrid)
rFrac <- pGrid
rFrac <- rasterFromXYZ(rFrac)
plot(rFrac)
writeRaster(rFrac, "./raster_mandel.tif", overwrite = T)
install.packages(rgdal)
install.packages (rgdal)
install.packages ("rgdal")
rFrac <- pGrid
rFrac <- rasterFromXYZ(rFrac)
plot(rFrac)
writeRaster(rFrac, "./raster_mandel.tif", overwrite = T)
library(raster)
library(parallel)
## read in mandelbrot matrix
pGrid <- readRDS("./pGrid_mandel.RDS")
## write raster of set
rFrac <- pGrid
rFrac <- rasterFromXYZ(rFrac)
plot(rFrac)
writeRaster(rFrac, "./raster_mandel.tif", overwrite = T)
## make distance matrix from set
dFrac <- rFrac
dFrac[dFrac != 51] <- 1
dFrac[dFrac == 51] <- NA
dBFra <- boundaries(dFrac, classes = F)
pix  <- rasterToPoints(dBFra)
pixB <- pix[pix[,3] == 1, 1:2]
pixI <- pix[pix[,3] == 0, 1:2]
findMinDist <- function(x, y, border = pixB){
min(sqrt((x - pixB[,1])^2 + (y - pixB[,2])^2))
}
pixD <- mcmapply(findMinDist, pixI[,1], pixI[,2],
border = pixB, mc.cores = detectCores())
saveRDS(pixD, "dist.RDS")
dFrac <- cbind(pixI, pixD)
dFrac <- rasterFromXYZ(dFrac)
writeRaster(dFrac, "./raster_distance_mandel.tif", overwrite = T)
install.packages("raster")
install.packages("raster")
install.packages("raster")
install.packages("raster")
install.packages("raster")
install.packages("raster")
install.packages("raster")
writeRaster(rFrac, "./raster_mandel.tif", overwrite = T)
dFrac <- rFrac
dFrac[dFrac != 51] <- 1
dFrac[dFrac == 51] <- NA
dBFra <- boundaries(dFrac, classes = F)
plot dBFra
plot (dBFra)
pix  <- rasterToPoints(dBFra)
pixB <- pix[pix[,3] == 1, 1:2]
pixI <- pix[pix[,3] == 0, 1:2]
head (pixB)
head (pixI)
findMinDist <- function(x, y, border = pixB){
min(sqrt((x - pixB[,1])^2 + (y - pixB[,2])^2))
}
readRDS (dist.RDS)
readRDS (dist)
readRDS (distRDS)
readRDS (dist.RDS)
readRDS(dist.RDS)
readRDS("dist.RDS")
pixD <- read.DRS
pixD <- dist.DRS
pixD <- "read.DRS"
pixD <- readRDS("./dist.RDS")
head ("pixD")
head("pixD")
head(pixD)
dFrac <- cbind(pixI, pixD)
dFrac <- rasterFromXYZ(dFrac)
plot (dFrac)
writeRaster(dFrac, "./raster_distance_mandel.tif", overwrite = T)
install.packages("rayshader")
library(raster)
library(rayshader)
dFrac <- raster("./raster_distance_mandel.tif")
dFrac <- raster::as.matrix(dFrac * 4e6)
dFrac %>%
sphere_shade(texture = "desert") %>%
plot_3d(dFrac)
